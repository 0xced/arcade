parameters:
  enableSymbolValidation: true

stages:
- stage: IS_Publish
  dependsOn: validate
  variables:
    - template: ../common-variables.yml
  displayName: Internal Servicing
  jobs:
  - template: ../setup-maestro-vars.yml

  - job:
    displayName: Symbol Publishing
    dependsOn: setupMaestroVars
    condition: contains(dependencies.setupMaestroVars.outputs['setReleaseVars.InitialChannels'], variables.InternalServicing_30_Channel_Id)
    variables:
      - group: DotNet-Symbol-Server-Pats
    pool:
      vmImage: 'windows-2019'
    steps:
      - task: DownloadBuildArtifacts@0
        displayName: Download PDB Artifacts
        inputs:
          buildType: current
          artifactName: PDBArtifacts
        continueOnError: true

      - task: DownloadBuildArtifacts@0
        displayName: Download Blob Artifacts
        inputs:
          buildType: current
          artifactName: BlobArtifacts

      - task: PowerShell@2
        displayName: Publish
        inputs:
          filePath: eng\common\sdk-task.ps1
          arguments: -task PublishToSymbolServers -restore -msbuildEngine dotnet
            /p:DotNetSymbolServerTokenMsdl=$(microsoft-symbol-server-pat) 
            /p:DotNetSymbolServerTokenSymWeb=$(symweb-symbol-server-pat) 
            /p:PDBArtifactsDirectory='$(Build.ArtifactStagingDirectory)/PDBArtifacts/'
            /p:BlobBasePath='$(Build.ArtifactStagingDirectory)/BlobArtifacts/'
            /p:Configuration=Release

  - job:
    displayName: Publish Assets
    dependsOn: setupMaestroVars
    variables:
      - group: DotNet-Blob-Feed
      - group: Publish-Build-Assets
      - group: AzureDevOps-Artifact-Feeds-Pats
      - name: BARBuildId
        value: $[ dependencies.setupMaestroVars.outputs['setReleaseVars.BARBuildId'] ]
      - name: IsStableBuild
        value: $[ dependencies.setupMaestroVars.outputs['setReleaseVars.IsStableBuild'] ]
      - name: IsInternalBuild
        value: $[ dependencies.setupMaestroVars.outputs['setReleaseVars.IsInternalBuild'] ]
    condition: contains(dependencies.setupMaestroVars.outputs['setReleaseVars.InitialChannels'], variables.InternalServicing_30_Channel_Id)
    pool:
      vmImage: 'windows-2019'
    steps:
      - task: DownloadBuildArtifacts@0
        displayName: Download Package Artifacts
        inputs:
          buildType: current
          artifactName: PackageArtifacts

      - task: DownloadBuildArtifacts@0
        displayName: Download Blob Artifacts
        inputs:
          buildType: current
          artifactName: BlobArtifacts

      - task: DownloadBuildArtifacts@0
        displayName: Download Asset Manifests
        inputs:
          buildType: current
          artifactName: AssetManifests

      - task: PowerShell@2
        displayName: Add Assets Location
        env:
          AZURE_DEVOPS_EXT_PAT: $(dn-bot-dnceng-unviersal-packages-rw)
        inputs:
          filePath: eng\common\sdk-task.ps1
          arguments: -task PublishArtifactsInManifest -restore -msbuildEngine dotnet 
            /p:ChannelId=$(InternalServicing_30_Channel_Id)
            /p:IsStableBuild=true
            /p:IsInternalBuild=false
            /p:RepositoryName=arcade
            /p:CommitSha=$(Build.SourceVersion)
            /p:NugetPath=$(Agent.BuildDirectory)\Nuget\NuGet.exe
            /p:AzdoTargetFeedPAT='$(dn-bot-dnceng-unviersal-packages-rw)' 
            /p:TargetFeedPAT='$(dn-bot-dnceng-unviersal-packages-rw)' 
            /p:AzureStorageTargetFeedPAT='$(dotnetfeed-storage-access-key-1)' 
            /p:BARBuildId=$(BARBuildId) 
            /p:MaestroApiEndpoint='https://maestro-int.westus2.cloudapp.azure.com'
            /p:BuildAssetRegistryToken='AAAAQvpNYZLOErtudpuFUCp01HY' 
            /p:ManifestsBasePath='$(Build.ArtifactStagingDirectory)/AssetManifests/' 
            /p:BlobBasePath='$(Build.ArtifactStagingDirectory)\BlobArtifacts' 
            /p:PackageBasePath='$(Build.ArtifactStagingDirectory)\PackageArtifacts' 
            /p:Configuration=Release 
        
      - task: NuGetCommand@2
        displayName: Publish Packages to AzDO Feed
        inputs:
          command: push
          vstsFeed: $(AzDoFeedName)
          packagesToPush: $(Build.ArtifactStagingDirectory)\PackageArtifacts\*.nupkg
          publishVstsFeed: $(AzDoFeedName)

      - task: PowerShell@2
        displayName: Publish Blobs to AzDO Feed
        inputs:
          filePath: $(Build.SourcesDirectory)/eng/common/post-build/publish-blobs-to-azdo.ps1
          arguments: -FeedName $(AzDoFeedName) 
            -BlobSourceFolder $(Build.ArtifactStagingDirectory)/BlobArtifacts/
        enabled: false
  
  - template: ../trigger-subscription.yml

- stage: IS_PublishValidation
  displayName: Publish Validation
  variables:
    - template: ../common-variables.yml  
  jobs:
  - template: ../setup-maestro-vars.yml

  - ${{ if eq(parameters.enableSymbolValidation, 'true') }}:
    - job:
      displayName: Symbol Availability
      dependsOn: setupMaestroVars
      condition: contains(dependencies.setupMaestroVars.outputs['setReleaseVars.InitialChannels'], variables.InternalServicing_30_Channel_Id)
      pool:
        vmImage: 'windows-2019'
      steps:
        - task: DownloadBuildArtifacts@0
          displayName: Download Package Artifacts
          inputs:
            buildType: current
            artifactName: PackageArtifacts

        - task: PowerShell@2
          displayName: Check Symbol Availability
          inputs:
            filePath: $(Build.SourcesDirectory)/eng/common/post-build/symbols-validation.ps1
            arguments: -InputPath $(Build.ArtifactStagingDirectory)/PackageArtifacts/ -ExtractPath $(Agent.BuildDirectory)/Temp/ -DotnetSymbolVersion $(SymbolToolVersion)

  - job:
    displayName: Gather Drop
    dependsOn: setupMaestroVars
    variables:
      BARBuildId: $[ dependencies.setupMaestroVars.outputs['setReleaseVars.BARBuildId'] ]
    condition: contains(dependencies.setupMaestroVars.outputs['setReleaseVars.InitialChannels'], variables.InternalServicing_30_Channel_Id)
    pool:
      vmImage: 'windows-2019'
    steps:
      - task: PowerShell@2
        displayName: Setup Darc CLI
        inputs:
          targetType: filePath
          filePath: '$(Build.SourcesDirectory)/eng/common/darc-init.ps1'

      - task: PowerShell@2
        displayName: Run Darc gather-drop
        inputs:
          targetType: inline
          script: |
            darc gather-drop --non-shipping --continue-on-error --id $(BARBuildId) --output-dir $(Agent.BuildDirectory)/Temp/Drop/ --bar-uri https://maestro-int.westus2.cloudapp.azure.com/ --password AAAAQvpNYZLOErtudpuFUCp01HY --latest-location

  - template: ../promote-build.yml
    parameters:
      ChannelId: ${{ variables.InternalServicing_30_Channel_Id }}
